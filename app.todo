# Todo:
------------------- FEAT - FIX - REMINDER - TEST - REFACTOR --------------------
01. FEAT: Languages
02. FEAT: Responsive layout
       - calendar view - notification messages
03. FEAT: Themes update
04. REMINDER: Clear (redis) cache on model events.
05. FEAT: Login button and logged in username link on website
06. REMINDER: Update to PHP 8 when Laravel 9 is released
07. REMINDER: Security (secure tokens, secure csrf, xss etc. hacking!)
07. REMINDER: REFACTOR: Vue Style guide (:key, component names...)
08. FEAT: Make technical documentation of how everything works.
09. TEST: Write tests
10. FEAT: Templates for (same client always 1 service, same time, price etc.)
11. FEAT: Send email using SMTP server (Gmail / Mail.ru or whatever...)
12. FEAT: Add force-position to dropdown menu
13. FEAT: Admin panel
        - see and manage all clients, their users, invoices, contacts etc.
        - be able to send messages and chat with clients (websockets)
        - be able to see what a client is doing (transfer screenshots somehow?)
        - password re-prompts & 2FA
        - See screen with html2canvas (screenshot via websockets)
14. FEAT: User roles (root, admin, super admin, moderator, user, guest)
        - not one root user but multiple to be able to see access logs for each
15. FIX: Min password length (javascript)
16. FIX: PHP if user / organization already exists
17. FEAT: See who is online and who is active. Online WS ping, active on click last
          activity
18. FEAT: Show some message at any time to any client
19. FEAT: Cut off client if invoice not paid
20. REFACTOR: Move chat from page to its own component (components/chat.vue..)







# Ideas:
--------------------------------------------------------------------------------






# Deployment:
--------------------------------------------------------------------------------

"> Make a new feature
 > Commit to git
 > Run deploy.sh on server
 
 > commit "My new feature"       - alias for "git add . && git commit -m"
 > ssh hostserver                - ssh key alias
 > deploy                        - alias for '../deploy.sh'
 "


1. Find a server / hosting.                                         ✅

2. Configure reverse proxy to point to the app's services.          ✅
   reverse  - - - - - > website   [localhost:6455]
    proxy   - - - - - > frontend  [localhost:47344]
            - - - - - > backend   [localhost:41166]

3. Use production .env files. (copy & replace script)               ✅
   client/.env ... VITE_SERVER_URL=http://app.myclients.org/api
   server/.env ... APP_CLIENT_URL, APP_URL, DB_...
   
4. Use production Docker files. (docker-compose.yaml)               ✅
   - If you already have them on your system, after git pull,
     you need to copy & replace your prod files. (.env & docker-compose)

5. Build static frontend assets (on prod server with prod .env)     ✅

6. php artisan migrate --seed                                       ✅

7. Put a CDN in front of the application.                           ✅

8. Change website Login link                                        ✅

9. Cloudflare supports only one level subdomain free TLS/SSL cert   ✅

10. Seed only once, after that only migrate (+ include seeding      ✅
    with migrations if neccessary)

11. Zero-downtime idea. First, only build the images and then       ✅
    dcd and dcu. So it will be very fast.