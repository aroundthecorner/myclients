# Todo: https://github.com/martinszeltins/myclients
------------------- FEAT - FIX - REMINDER - TEST - REFACTOR --------------------
01. REMINDER: Validate forms.
02. REMINDER: Update to PHP 8 when Laravel 9 is released
03. REMINDER: Security (secure tokens, secure csrf, xss etc. hacking!)
04. REMINDER: REFACTOR: Vue Style guide (:key, component names...)
05. REMINDER: Clear (redis) cache on model events.
06. TEST: Write tests
07. REFACTOR: Move chat from page to its own component (components/chat.vue..)

08. FEAT: (!) Cut off client if invoice not paid
          - how do we want to do this?
          - show a red message at the top - unpaid invoice
          - disable features of calendar only, when making a backend call, then
            show that your invoice is not paid.
          - still allow to browser most pages.
09. FEAT: Responsive layout
          - calendar view - notification messages
10. FEAT: Themes update
11. FEAT: Login button and logged in username link on website
12. FEAT: Make technical documentation of how everything works.
13. FEAT: Templates for (same client always 1 service, same time, price etc.)
14. FEAT: Send email using SMTP server (Gmail / Mail.ru or whatever...)
15. FEAT: Admin panel
          - see and manage all clients, their users, invoices, contacts etc.
          - be able to send messages and chat with clients (websockets)
          - be able to see what a client is doing (transfer screenshots somehow?)
          - password re-prompts & 2FA
          - See screen with html2canvas (screenshot via websockets)
          - not one root user but multiple to be able to see access logs for each
16. FEAT: See who is online and who is active. Online WS ping, active on click last
          activity
18. FIX: (!) IMPORTANT - create websocket server production, save to server and ...
19. FIX: If you are no longer online, go to login (maybe expired)
19. FIX: Don't send online ping if not authenticated
20. FIX: SyntaxError: Unexpected end of JSON input
            at Function.ping (user_online.js:38)
                return await response.json()











# Deployment:
--------------------------------------------------------------------------------

"> Make a new feature
 > Commit to git
 > Run deploy.sh on server
 
 > commit "My new feature"       - alias for "git add . && git commit -m"
 > ssh hostserver                - ssh key alias
 > deploy                        - alias for '../deploy.sh'
 "


1. Find a server / hosting.                                         ✅

2. Configure reverse proxy to point to the app's services.          ✅
   reverse  - - - - - > website   [localhost:6455]
    proxy   - - - - - > frontend  [localhost:47344]
            - - - - - > backend   [localhost:41166]

3. Use production .env files. (copy & replace script)               ✅
   client/.env ... VITE_SERVER_URL=http://app.myclients.org/api
   server/.env ... APP_CLIENT_URL, APP_URL, DB_...
   
4. Use production Docker files. (docker-compose.yaml)               ✅
   - If you already have them on your system, after git pull,
     you need to copy & replace your prod files. (.env & docker-compose)

5. Build static frontend assets (on prod server with prod .env)     ✅

6. php artisan migrate --seed                                       ✅

7. Put a CDN in front of the application.                           ✅

8. Change website Login link                                        ✅

9. Cloudflare supports only one level subdomain free TLS/SSL cert   ✅

10. Seed only once, after that only migrate (+ include seeding      ✅
    with migrations if neccessary)

11. Zero-downtime idea. First, only build the images and then       ✅
    dcd and dcu. So it will be very fast.